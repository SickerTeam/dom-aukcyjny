// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using backend.Data.Models;
using Microsoft.EntityFrameworkCore;

namespace backend.Data;

public partial class DatabaseContext : DbContext
{
    public DatabaseContext(DbContextOptions<DatabaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<DbAuction> Auctions { get; set; }

    public virtual DbSet<DbBid> Bids { get; set; }

    public virtual DbSet<DbComment> Comments { get; set; }

    public virtual DbSet<DbFixedPriceListing> FixedPriceListings { get; set; }

    public virtual DbSet<DbFixedPriceListingPurchase> FixedPriceListingPurchases { get; set; }

    public virtual DbSet<DbLike> Likes { get; set; }

    public virtual DbSet<DbPost> Posts { get; set; }

    public virtual DbSet<DbProduct> Products { get; set; }

    public virtual DbSet<DbUser> Users { get; set; }


    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DbAuction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Auction__3214EC07DC09A5AE");

            entity.ToTable("Auction");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.EndsAt).HasColumnType("datetime");
            entity.Property(e => e.EstimateMaxPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EstimateMinPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ReservePrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.StartingPrice).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Product).WithMany(p => p.Auctions)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK__Auction__Product__10766AC2");
        });

        modelBuilder.Entity<DbBid>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Bid__3214EC075D652D40");

            entity.ToTable("Bid");

            entity.Property(e => e.Amount).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.Auction).WithMany(p => p.Bids)
                .HasForeignKey(d => d.AuctionId)
                .HasConstraintName("FK__Bid__AuctionId__1352D76D");

            entity.HasOne(d => d.User).WithMany(p => p.Bids)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Bid__UserId__1446FBA6");
        });

        modelBuilder.Entity<DbComment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Comment__3214EC0799269DA1");

            entity.ToTable("Comment");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Text)
                .IsRequired()
                .HasMaxLength(1024)
                .IsUnicode(false);

            entity.HasOne(d => d.Post).WithMany(p => p.Comments)
                .HasForeignKey(d => d.PostId)
                .HasConstraintName("FK__Comment__PostId__19FFD4FC");

            entity.HasOne(d => d.User).WithMany(p => p.Comments)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comment__UserId__1AF3F935");
        });

        modelBuilder.Entity<DbFixedPriceListing>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FixedPri__3214EC07B51C3D6F");

            entity.ToTable("FixedPriceListing");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Price).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Product).WithMany(p => p.FixedPriceListings)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK__FixedPric__Produ__21A0F6C4");
        });

        modelBuilder.Entity<DbFixedPriceListingPurchase>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FixedPri__3214EC07C4B451D9");

            entity.ToTable("FixedPriceListingPurchase");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.Buyer).WithMany(p => p.FixedPriceListingPurchases)
                .HasForeignKey(d => d.BuyerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FixedPric__Buyer__247D636F");

            entity.HasOne(d => d.FixedPriceListing).WithMany(p => p.FixedPriceListingPurchases)
                .HasForeignKey(d => d.FixedPriceListingId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FixedPric__Fixed__257187A8");
        });

        modelBuilder.Entity<DbLike>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Like__3214EC07CAEBDF12");

            entity.ToTable("Like");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.Post).WithMany(p => p.Likes)
                .HasForeignKey(d => d.PostId)
                .HasConstraintName("FK__Like__PostId__1DD065E0");

            entity.HasOne(d => d.User).WithMany(p => p.Likes)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Like__UserId__1EC48A19");
        });

        modelBuilder.Entity<DbPost>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Post__3214EC0706AB4771");

            entity.ToTable("Post");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Text)
                .IsRequired()
                .HasMaxLength(2048)
                .IsUnicode(false);

            entity.HasOne(d => d.User).WithMany(p => p.Posts)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Post__UserId__17236851");
        });

        modelBuilder.Entity<DbProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Product__3214EC0732A7422F");

            entity.ToTable("Product");

            entity.Property(e => e.Artist)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Depth).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(2048)
                .IsUnicode(false);
            entity.Property(e => e.Height).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Width).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Seller).WithMany(p => p.Products)
                .HasForeignKey(d => d.SellerId)
                .HasConstraintName("FK__Product__SellerI__0D99FE17");
        });

        modelBuilder.Entity<DbUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3214EC0767E510BF");

            entity.ToTable("User");

            entity.Property(e => e.Bio)
                .HasMaxLength(2048)
                .IsUnicode(false);
            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PersonalLink)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ProfilePictureLink)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

    public List<string> ApplyMigrations()
    {
        var pending = Database.GetPendingMigrations();

        if(pending.Any())
        {
            Database.Migrate();
            return pending.ToList();
        }

        return new List<string>();
    }
}