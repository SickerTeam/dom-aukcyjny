// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231213140102_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Data.Models.DbAuction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndsAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("EstimateMaxPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("EstimateMinPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReservePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Auction__3214EC07E98FCF57");

                    b.HasIndex("ProductId");

                    b.ToTable("Auction", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbBid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Bid__3214EC076A6C4D73");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("Bid", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1024)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Comment__3214EC076243BED4");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbFixedPriceListing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__FixedPri__3214EC07EA08D03E");

                    b.HasIndex("ProductId");

                    b.ToTable("FixedPriceListing", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbFixedPriceListingPurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("FixedPriceListingId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__FixedPri__3214EC07FCF7769A");

                    b.HasIndex("BuyerId");

                    b.HasIndex("FixedPriceListingId");

                    b.ToTable("FixedPriceListingPurchase", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Like__3214EC073802F4E8");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Like", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Post__3214EC0762DECBBE");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Depth")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Product__3214EC07B4E77B2C");

                    b.HasIndex("SellerId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PersonalLink")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC070010D646");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("backend.Data.Models.DbAuction", b =>
                {
                    b.HasOne("backend.Data.Models.DbProduct", "Product")
                        .WithMany("Auctions")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Auction__Product__6C190EBB");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("backend.Data.Models.DbBid", b =>
                {
                    b.HasOne("backend.Data.Models.DbAuction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Bid__AuctionId__6EF57B66");

                    b.HasOne("backend.Data.Models.DbUser", "User")
                        .WithMany("Bids")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Bid__UserId__6FE99F9F");

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Data.Models.DbComment", b =>
                {
                    b.HasOne("backend.Data.Models.DbPost", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Comment__PostId__75A278F5");

                    b.HasOne("backend.Data.Models.DbUser", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Comment__UserId__76969D2E");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Data.Models.DbFixedPriceListing", b =>
                {
                    b.HasOne("backend.Data.Models.DbProduct", "Product")
                        .WithMany("FixedPriceListings")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__FixedPric__Produ__7D439ABD");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("backend.Data.Models.DbFixedPriceListingPurchase", b =>
                {
                    b.HasOne("backend.Data.Models.DbUser", "Buyer")
                        .WithMany("FixedPriceListingPurchases")
                        .HasForeignKey("BuyerId")
                        .IsRequired()
                        .HasConstraintName("FK__FixedPric__Buyer__00200768");

                    b.HasOne("backend.Data.Models.DbFixedPriceListing", "FixedPriceListing")
                        .WithMany("FixedPriceListingPurchases")
                        .HasForeignKey("FixedPriceListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FixedPric__Fixed__01142BA1");

                    b.Navigation("Buyer");

                    b.Navigation("FixedPriceListing");
                });

            modelBuilder.Entity("backend.Data.Models.DbLike", b =>
                {
                    b.HasOne("backend.Data.Models.DbPost", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Like__PostId__797309D9");

                    b.HasOne("backend.Data.Models.DbUser", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Like__UserId__7A672E12");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Data.Models.DbPost", b =>
                {
                    b.HasOne("backend.Data.Models.DbUser", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Post__UserId__72C60C4A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Data.Models.DbProduct", b =>
                {
                    b.HasOne("backend.Data.Models.DbUser", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__SellerI__693CA210");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("backend.Data.Models.DbAuction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("backend.Data.Models.DbFixedPriceListing", b =>
                {
                    b.Navigation("FixedPriceListingPurchases");
                });

            modelBuilder.Entity("backend.Data.Models.DbPost", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("backend.Data.Models.DbProduct", b =>
                {
                    b.Navigation("Auctions");

                    b.Navigation("FixedPriceListings");
                });

            modelBuilder.Entity("backend.Data.Models.DbUser", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Comments");

                    b.Navigation("FixedPriceListingPurchases");

                    b.Navigation("Likes");

                    b.Navigation("Posts");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
