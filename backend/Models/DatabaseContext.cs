// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace backend.Models;

public partial class DatabaseContext : DbContext
{
    public DatabaseContext()
    {
    }

    public DatabaseContext(DbContextOptions<DatabaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Auction> auctions { get; set; }

    public virtual DbSet<AuctionPurchase> auctionpurchases { get; set; }

    public virtual DbSet<Bid> bids { get; set; }

    public virtual DbSet<Instabuy> instabuys { get; set; }

    public virtual DbSet<InstabuyPurchase> instabuypurchases { get; set; }

    public virtual DbSet<Product> products { get; set; }

    public virtual DbSet<User> users { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=hildur.ucn.dk;Initial Catalog=CSC-CSD-S211_10407554;Persist Security Info=True;User ID=CSC-CSD-S211_10407554;Password=Password1!");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Auction>(entity =>
        {
            entity.HasKey(e => e.auctionid).HasName("PK__auction__64B08806EDEC2ACA");

            entity.ToTable("auction");

            entity.Property(e => e.endtime).HasColumnType("datetime");

            entity.HasOne(d => d.product).WithMany(p => p.auctions)
                .HasForeignKey(d => d.productid)
                .HasConstraintName("FK__auction__product__05D8E0BE");
        });

        modelBuilder.Entity<AuctionPurchase>(entity =>
        {
            entity.HasKey(e => e.purchaseid).HasName("PK__auctionp__02662E4410AB9591");

            entity.Property(e => e.purchasetime).HasColumnType("datetime");

            entity.HasOne(d => d.auction).WithMany(p => p.auctionpurchases)
                .HasForeignKey(d => d.auctionid)
                .HasConstraintName("FK__auctionpu__aucti__0A9D95DB");

            entity.HasOne(d => d.buyer).WithMany(p => p.auctionpurchasebuyers)
                .HasForeignKey(d => d.buyerid)
                .HasConstraintName("FK__auctionpu__buyer__09A971A2");

            entity.HasOne(d => d.seller).WithMany(p => p.auctionpurchasesellers)
                .HasForeignKey(d => d.sellerid)
                .HasConstraintName("FK__auctionpu__selle__08B54D69");
        });

        modelBuilder.Entity<Bid>(entity =>
        {
            entity.HasKey(e => e.bidid).HasName("PK__bids__48F683705EA8B3C7");

            entity.HasOne(d => d.auction).WithMany(p => p.bids)
                .HasForeignKey(d => d.auctionid)
                .HasConstraintName("FK__bids__auctionid__0D7A0286");

            entity.HasOne(d => d.bidder).WithMany(p => p.bids)
                .HasForeignKey(d => d.bidderid)
                .HasConstraintName("FK__bids__bidderid__0E6E26BF");
        });

        modelBuilder.Entity<Instabuy>(entity =>
        {
            entity.HasKey(e => e.instaid).HasName("PK__instabuy__0072A1BC93F8137E");

            entity.ToTable("instabuy");
        });

        modelBuilder.Entity<InstabuyPurchase>(entity =>
        {
            entity.HasKey(e => e.purchaseid).HasName("PK__instabuy__02662E442CE9C313");

            entity.Property(e => e.purchasetime).HasColumnType("datetime");

            entity.HasOne(d => d.insta).WithMany(p => p.instabuypurchases)
                .HasForeignKey(d => d.instaid)
                .HasConstraintName("FK__instabuyp__insta__02FC7413");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.productid).HasName("PK__product__2D172D32A65CD596");

            entity.ToTable("product");

            entity.Property(e => e.description)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.title)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.artis).WithMany(p => p.Products)
                .HasForeignKey(d => d.artisid)
                .HasConstraintName("FK__product__artisid__7E37BEF6");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.userid).HasName("PK__user__CBA1B257EF4AAC7F");

            entity.ToTable("user");

            entity.Property(e => e.bio)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.country)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.email)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.firstName)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.lastName)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pass)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.personal_link)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}